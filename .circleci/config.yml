version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.7.3

    working_directory: ~/smol

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -q --upgrade pip
            pip install -r requirements.txt
            pip install -q pytest

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pip install --quiet -e .
            pytest tests

  build-cython:
    docker:
      - image: circleci/python:3.7.3

    parameters:
      codacy-token:
        type: string
        default: ${CODACY_PROJECT_TOKEN}

    working_directory: ~/smol

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -q --upgrade pip
            pip install -r requirements.txt
            pip install -q coverage cython pytest

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py --quiet install --use-cython
            coverage run -m pytest tests
            coverage xml
            export CODACY_PROJECT_TOKEN=<< parameters.project-token >>
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage.xml

  style-check:
    docker:
      - image: circleci/python:3.7.3

    working_directory: ~/smol

    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pycodestyle flake8 mypy pylint

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            echo "pycodestyle checks..."
            pycodestyle smol
            echo "--- Done ---"
            echo "flake8 checks..."
            flake8 --count --show-source --statistics smol
            # exit-zero treats all errors as warnings.
            flake8 --count --exit-zero --max-complexity=20 --statistics smol
            echo "--- Done ---"
            # remove the following for now. The code is not there yet :(
            # echo "mypy checks..."
            # mypy smol
            # echo "--- Done ---"
            # echo "pylint checks..."
            # pylint --exit-zero smol
            # echo "--- Done ---"

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
      - build-cython
      - style-check
