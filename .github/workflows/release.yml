name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

  release-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-optional.txt
          pip install -e .[docs]

      - name: Build docs
        run: sphinx-build docs/src docs_build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./docs_build

  release-github:

    runs-on: ubuntu-latest
    needs:
      - release-docs

    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Write release info  # CHANGES.md must be edited with the correct version being released.
        run: awk 'BEGIN {p = 0} {a = 0 }; /\[v([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?\]/ { p += 1; a = 1}; p + a == 1 { print } ' CHANGES.md | sed  -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' > release.txt

      - name: Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          body_path: release.txt
          draft: false
          prerelease: false

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    needs:
      - release-github
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
    env:
      CIBW_SKIP: pp*  # skip pypy wheels

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2

      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    needs:
      - release-github

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Optional, use if you use setuptools_scm

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  release-pypi:
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
